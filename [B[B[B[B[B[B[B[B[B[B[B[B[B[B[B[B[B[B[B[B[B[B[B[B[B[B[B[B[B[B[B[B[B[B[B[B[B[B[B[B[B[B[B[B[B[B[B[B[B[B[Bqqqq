[33m1a3124b[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m Prints the data in the node with the named index
[33m8996077[m Function to show the position of a node in the list
[33m685d411[m Function to check of the list is empty or it has nodes
[33m1fb2e94[m Function to remove a node from the list
[33mc701eb2[m Function to add a node to the list
[33mdf0bf5f[m Returning the head node
[33m35ccf04[m A utility function to show the size of the linked list
[33ma60372a[m A function to create a node and some local variables
[33m83ef8f0[m Linked list function initialization
[33me7a35cd[m Some dummy data to test the hash table
[33mffe0038[m Debugging
[33m74664b7[m Lookup function to search for an item in the table using a key
[33mfd04490[m A funtion to  remove an item in the hash table'
[33md09a1ab[m a function to add information into the table
[33m850ee4a[m hashTable function initialization and a utility function to print arrays items
[33ma430971[m Initializing the hash function
[33m532ad4a[m file initialization
[33m6dce2ff[m[33m ([m[1;31morigin/main[m[33m)[m other getters and setters
[33mdc44879[m Accessing variables in nested objects using destructuring assignment
[33mec4cb90[m creating record objects and using them  to display reliable data
[33m3c286ae[m A Function to lookup an object profile from an array of object properties
[33m54eadb5[m Examples of More complex Arrow Functions
[33m5ea77c0[m Examples of getters and setters to achieve encapsulation
[33m7d0bb0c[m Passing an object as an argument to a function
[33mcec36fa[m Passing values from object to object without dot notation
[33m5cea610[m A simpler method of passing values into objects by means of arrow functions
[33md795525[m Destructuring Assignment to operate on arrays
[33m23cf2a9[m Using getters and setters to initialise member instance variables
[33me68e27b[m Using the rest operator to manipulate arrays
[33mdb57ec6[m A challenge to create a html list from a javascrip array
[33m1232f14[m It is a alternative for the ordinary if statement
[33m61b0b43[m Using a Spread Operator to spread arrays into individual elements
[33m35157fc[m Function that helps check if object contains a certain property
[33mdedda64[m Returning Early Pattern from functions
[33me8adc18[m Arrow functions syntax in comparison with the normal functions
[33m28828d7[m Normal functions architecture
[33m9fb566b[m A function that takes in a value as a parameter and return true or false according to whether the value is contained in the object
[33mbd6953e[m A function to update the state(variables) and behaviour(methods) of an object
[33mb320507[m Coverting literals to String
[33m35d515f[m Use of variables to hold multiple qualities of an object
[33mcc1800c[m Nested objects
[33m0f58f23[m Inbuilt function to convert stringType numbers into IntegerTYpe numbers
[33m1d926c7[m Physical implementation of the class blueprint
[33mac49c74[m QUeue algorithm in javaScript
[33ma9faca0[m Logical AND & OR, used in IF statements to make multiple conditions
[33mb64c3ca[m Inbuilt functions to generate random numbers
[33m97a4d99[m Classes defined using class keyword
[33mf413ca8[m Case Switch algorithm
[33m033d1de[m Binary Search Tree data structure in raw javaScript
[33m873efa5[m Stacks data structure in javascript
[33m5e4b2d7[m Linked lists data structure in pure javascript
[33mfd42259[m FOR,While,Do While loops
[33m6cff261[m Data palindrome in js
[33m8159329[m Queues that store elements according to their priotity in the Queue
[33mca833bd[m traditional queue without arrays
[33md584404[m Sets In Js
[33m8df2195[m getters and setters test
